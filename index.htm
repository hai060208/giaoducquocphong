<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vai tr√≤ v√† Nhi·ªám v·ª• C·ªët l√µi c·ªßa Qu√¢n ƒë·ªôi Nh√¢n d√¢n Vi·ªát Nam</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Patriot Palette (White/Light Gray background, Deep Red accent, Gold/Yellow for highlight) -->
    <!-- Application Structure Plan: A dashboard-style SPA featuring three main thematic sections (roles of the QƒêNDVN). Users interact via large thematic buttons (tabs) to dynamically switch the displayed content card, revealing detailed mission descriptions, key forces involved, and supporting visual elements (icons). This structure prioritizes synthesizing the QƒêNDVN's multi-faceted role into clear, digestible themes, aiding rapid understanding and recall. -->
    <!-- Visualization & Content Choices: Main Roles (3) -> Goal: Organize/Inform -> Method: Interactive tabbed cards. Interaction: Click to display detailed card content. Justification: Focuses user attention on one role at a time, making complex information simple. Detailed Missions -> Goal: Inform -> Method: Bulleted lists within the cards. Key Forces -> Goal: Identify -> Method: Iconic representations within the cards. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #fcfcfc;
        }
        .main-card {
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .main-card.hidden {
            opacity: 0;
            transform: translateY(10px);
            position: absolute; /* Quan tr·ªçng ƒë·ªÉ th·∫ª hidden kh√¥ng chi·∫øm kh√¥ng gian */
            top: 0;
            left: 0;
            width: 100%;
        }
        .tab-btn {
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .tab-btn.active {
            background-color: #991b1b; /* Deep Red for active state */
            color: #fef3c7; /* Pale Yellow/Gold text */
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.06);
        }
    </style>
</head>
<body class="text-gray-900">

    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-12">
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-extrabold text-red-700 leading-tight">
                3 Vai tr√≤ C·ªët l√µi c·ªßa Qu√¢n ƒë·ªôi Nh√¢n d√¢n Vi·ªát Nam</h1>
<p class="mt-4 text-xl text-gray-700 max-w-4xl mx-auto">
                QƒêNDVN kh√¥ng ch·ªâ l√† l·ª±c l∆∞·ª£ng chi·∫øn ƒë·∫•u m√† c√≤n l√† tr∆∞·ªùng h·ªçc l·ªõn, ƒë√≥ng g√≥p v√†o x√¢y d·ª±ng ƒë·∫•t n∆∞·ªõc v√† b·∫£o v·ªá ƒë·ªùi s·ªëng nh√¢n d√¢n.
            </p>
        </header>

        <main>
            <!-- Ph·∫ßn T∆∞∆°ng t√°c (Tab Navigation) -->
            <section class="mb-12">
                <div id="tabs-container" class="grid grid-cols-1 md:grid-cols-3 gap-4 max-w-4xl mx-auto">
                    <!-- Buttons will be generated by JS -->
                </div>
            </section>

            <!-- Ph·∫ßn N·ªôi dung Chi ti·∫øt (Dynamic Cards) -->
            <section class="relative min-h-[500px] md:min-h-[400px] max-w-4xl mx-auto">
                <div id="content-container">
                    <!-- Cards will be generated and shown/hidden by JS -->
                </div>
            </section>
        </main>

        <!-- Th√¥ng ƒëi·ªáp K·∫øt th√∫c -->
        <footer class="mt-16 text-center">
            <div class="bg-red-700 text-white py-8 px-4 rounded-2xl shadow-xl">
                <p class="text-2xl md:text-3xl font-bold tracking-wider">
                    "Trung v·ªõi ƒê·∫£ng, hi·∫øu v·ªõi d√¢n, s·∫µn s√†ng chi·∫øn ƒë·∫•u hy sinh v√¨ ƒë·ªôc l·∫≠p, t·ª± do c·ªßa T·ªï qu·ªëc, v√¨ ch·ªß nghƒ©a x√£ h·ªôi. Nhi·ªám v·ª• n√†o c≈©ng ho√†n th√†nh, kh√≥ khƒÉn n√†o c≈©ng v∆∞·ª£t qua, k·∫ª th√π n√†o c≈©ng ƒë√°nh th·∫Øng."
                </p>
            </div>
        </footer>
    </div>

    <script>
        const rolesData = [
            { 
                id: 'chien-dau', 
                name: '1. S·∫µn s√†ng Chi·∫øn ƒë·∫•u & B·∫£o v·ªá T·ªï qu·ªëc', 
                icon: 'üõ°Ô∏è', 
                summary: 'Vai tr√≤ n√≤ng c·ªët, th∆∞·ªùng tr·ª±c, ƒë·∫£m b·∫£o s·ª©c m·∫°nh ph√≤ng th·ªß qu·ªëc gia tr∆∞·ªõc m·ªçi m·ªëi ƒëe d·ªça.', 
                missions: [
                    'B·∫£o v·ªá v·ªØng ch·∫Øc ƒë·ªôc l·∫≠p, ch·ªß quy·ªÅn, th·ªëng nh·∫•t, to√†n v·∫πn l√£nh th·ªï.',
                    'Duy tr√¨ an ninh ch√≠nh tr·ªã, tr·∫≠t t·ª± an to√†n x√£ h·ªôi.',
                    'T√°c chi·∫øn khi c√≥ xung ƒë·ªôt, chi·∫øn tranh; ph√≤ng th·ªß v√† gi·ªØ v·ªØng khu v·ª±c tr·ªçng y·∫øu.'
                ],
                forces: 'L·ª•c qu√¢n, H·∫£i qu√¢n, Ph√≤ng kh√¥ng - Kh√¥ng qu√¢n, B·ªô ƒë·ªôi Bi√™n ph√≤ng, ƒê·∫∑c c√¥ng.'
            },
            { 
                id: 'kinh-te', 
                name: '2. Tham gia X√¢y d·ª±ng Kinh t·∫ø & Qu·ªëc ph√≤ng', 
                icon: 'üèóÔ∏è', 
                summary: 'T√≠ch c·ª±c tham gia ph√°t tri·ªÉn kinh t·∫ø-x√£ h·ªôi, c·ªßng c·ªë qu·ªëc ph√≤ng to√†n d√¢n t·∫°i c√°c v√πng s√¢u, v√πng xa, bi√™n gi·ªõi, h·∫£i ƒë·∫£o.', 
                missions: [
'X√¢y d·ª±ng c√°c c√¥ng tr√¨nh qu·ªëc ph√≤ng k·∫øt h·ª£p kinh t·∫ø (ƒë∆∞·ªùng, c·∫£ng, s√¢n bay).','Th·ª±c hi·ªán nhi·ªám v·ª• khai hoang, l√†m th·ªßy l·ª£i, tham gia s·∫£n xu·∫•t n√¥ng nghi·ªáp t·∫°i v√πng kh√≥ khƒÉn.',
                    'ƒê√†o t·∫°o ngh·ªÅ v√† chuy·ªÉn giao c√¥ng ngh·ªá cho b·ªô ƒë·ªôi xu·∫•t ng≈©.'
                ],
                forces: 'C√°c ƒêo√†n Kinh t·∫ø Qu·ªëc ph√≤ng, C√¥ng binh, Qu√¢n y, c√°c Binh ƒëo√†n ch·ªß l·ª±c.'
            },
            { 
                id: 'dan-van', 
                name: '3. C√¥ng t√°c D√¢n v·∫≠n, C·ª©u h·ªô & H·ªó tr·ª£ Nh√¢n d√¢n', 
                icon: 'üÜò', 
                summary: 'G·∫Øn b√≥ m√°u th·ªãt v·ªõi nh√¢n d√¢n, l√† l·ª±c l∆∞·ª£ng ƒëi ƒë·∫ßu trong kh·∫Øc ph·ª•c h·∫≠u qu·∫£ thi√™n tai, d·ªãch b·ªánh.', 
                missions: [
                    'Gi√∫p d√¢n x√≥a ƒë√≥i gi·∫£m ngh√®o, x√¢y d·ª±ng n√¥ng th√¥n m·ªõi, kh√°m ch·ªØa b·ªánh mi·ªÖn ph√≠.',
                    'Tham gia ph√≤ng ch·ªëng, c·ª©u h·ªô c·ª©u n·∫°n thi√™n tai (l≈© l·ª•t, ch√°y r·ª´ng, s·∫°t l·ªü).',
                    'Th·ª±c hi·ªán c√¥ng t√°c ngo·∫°i giao qu·ªëc ph√≤ng, gi·ªØ g√¨n h√≤a b√¨nh th·∫ø gi·ªõi.'
                ],
                forces: 'T·∫•t c·∫£ c√°c Qu√¢n khu, Qu√¢n ƒëo√†n, l·ª±c l∆∞·ª£ng C√¥ng binh v√† Qu√¢n y.'
            }
        ];

        const tabsContainer = document.getElementById('tabs-container');
        const contentContainer = document.getElementById('content-container');

        function createContentCard(role, isActive) {
            const card = document.createElement('div');
            card.id = role.id;
            card.className = `main-card p-6 md:p-10 rounded-2xl border-t-4 border-red-600 bg-white ${role.id === 'chien-dau' ? '' : 'hidden'}`;

            card.innerHTML = `
                <div class="flex items-start mb-6">
                    <span class="text-5xl mr-4">${role.icon}</span>
                    <div>
                        <h3 class="text-3xl font-bold text-red-700">${role.name}</h3>
                        <p class="text-gray-600 mt-1">${role.summary}</p>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="md:col-span-2">
                        <h4 class="text-xl font-semibold mb-3 border-b pb-1 text-red-600">Nhi·ªám v·ª• Chi ti·∫øt:</h4>
                        <ul class="list-disc pl-5 space-y-2 text-gray-700 text-base">
                            ${role.missions.map(m => `<li>${m}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="md:col-span-1 bg-gray-50 p-4 rounded-xl border border-gray-200">
                        <h4 class="text-xl font-semibold mb-3 border-b pb-1 text-red-600">L·ª±c l∆∞·ª£ng Ti√™u bi·ªÉu:</h4>
                        <p class="text-gray-700 text-sm italic">${role.forces}</p>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vai tr√≤ v√† Nhi·ªám v·ª• C·ªët l√µi c·ªßa Qu√¢n ƒë·ªôi Nh√¢n d√¢n Vi·ªát Nam</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Patriot Palette (White/Light Gray background, Deep Red accent, Gold/Yellow for highlight) -->
    <!-- Application Structure Plan: A dashboard-style SPA featuring three main thematic sections (roles of the QƒêNDVN). Users interact via large thematic buttons (tabs) to dynamically switch the displayed content card, revealing detailed mission descriptions, key forces involved, and supporting visual elements (icons). This structure prioritizes synthesizing the QƒêNDVN's multi-faceted role into clear, digestible themes, aiding rapid understanding and recall. -->
    <!-- Visualization & Content Choices: Main Roles (3) -> Goal: Organize/Inform -> Method: Interactive tabbed cards. Interaction: Click to display detailed card content. Justification: Focuses user attention on one role at a time, making complex information simple. Detailed Missions -> Goal: Inform -> Method: Bulleted lists within the cards. Key Forces -> Goal: Identify -> Method: Iconic representations within the cards. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #fcfcfc;
        }
        .main-card {
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .main-card.hidden {
            opacity: 0;
            transform: translateY(10px);
            position: absolute; /* Quan tr·ªçng ƒë·ªÉ th·∫ª hidden kh√¥ng chi·∫øm kh√¥ng gian */
            top: 0;
            left: 0;
            width: 100%;
        }
        .tab-btn {
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .tab-btn.active {
            background-color: #991b1b; /* Deep Red for active state */
            color: #fef3c7; /* Pale Yellow/Gold text */
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.06);
        }
    </style>
</head>
<body class="text-gray-900">

    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-12">
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-extrabold text-red-700 leading-tight">
                3 Vai tr√≤ C·ªët l√µi c·ªßa Qu√¢n ƒë·ªôi Nh√¢n d√¢n Vi·ªát Nam
</h1>
            <p class="mt-4 text-xl text-gray-700 max-w-4xl mx-auto">
                QƒêNDVN kh√¥ng ch·ªâ l√† l·ª±c l∆∞·ª£ng chi·∫øn ƒë·∫•u m√† c√≤n l√† tr∆∞·ªùng h·ªçc l·ªõn, ƒë√≥ng g√≥p v√†o x√¢y d·ª±ng ƒë·∫•t n∆∞·ªõc v√† b·∫£o v·ªá ƒë·ªùi s·ªëng nh√¢n d√¢n.
            </p>
        </header>

        <main>
            <!-- Ph·∫ßn T∆∞∆°ng t√°c (Tab Navigation) -->
            <section class="mb-12">
                <div id="tabs-container" class="grid grid-cols-1 md:grid-cols-3 gap-4 max-w-4xl mx-auto">
                    <!-- Buttons will be generated by JS -->
                </div>
            </section>

            <!-- Ph·∫ßn N·ªôi dung Chi ti·∫øt (Dynamic Cards) -->
            <section class="relative min-h-[500px] md:min-h-[400px] max-w-4xl mx-auto">
                <div id="content-container">
                    <!-- Cards will be generated and shown/hidden by JS -->
                </div>
            </section>
        </main>

        <!-- Th√¥ng ƒëi·ªáp K·∫øt th√∫c -->
        <footer class="mt-16 text-center">
            <div class="bg-red-700 text-white py-8 px-4 rounded-2xl shadow-xl">
                <p class="text-2xl md:text-3xl font-bold tracking-wider">
                    "Trung v·ªõi ƒê·∫£ng, hi·∫øu v·ªõi d√¢n, s·∫µn s√†ng chi·∫øn ƒë·∫•u hy sinh v√¨ ƒë·ªôc l·∫≠p, t·ª± do c·ªßa T·ªï qu·ªëc, v√¨ ch·ªß nghƒ©a x√£ h·ªôi. Nhi·ªám v·ª• n√†o c≈©ng ho√†n th√†nh, kh√≥ khƒÉn n√†o c≈©ng v∆∞·ª£t qua, k·∫ª th√π n√†o c≈©ng ƒë√°nh th·∫Øng."
                </p>
            </div>
        </footer>
    </div>

    <script>
        const rolesData = [
            { 
                id: 'chien-dau', 
                name: '1. S·∫µn s√†ng Chi·∫øn ƒë·∫•u & B·∫£o v·ªá T·ªï qu·ªëc', 
                icon: 'üõ°Ô∏è', 
                summary: 'Vai tr√≤ n√≤ng c·ªët, th∆∞·ªùng tr·ª±c, ƒë·∫£m b·∫£o s·ª©c m·∫°nh ph√≤ng th·ªß qu·ªëc gia tr∆∞·ªõc m·ªçi m·ªëi ƒëe d·ªça.', 
                missions: [
                    'B·∫£o v·ªá v·ªØng ch·∫Øc ƒë·ªôc l·∫≠p, ch·ªß quy·ªÅn, th·ªëng nh·∫•t, to√†n v·∫πn l√£nh th·ªï.',
                    'Duy tr√¨ an ninh ch√≠nh tr·ªã, tr·∫≠t t·ª± an to√†n x√£ h·ªôi.',
                    'T√°c chi·∫øn khi c√≥ xung ƒë·ªôt, chi·∫øn tranh; ph√≤ng th·ªß v√† gi·ªØ v·ªØng khu v·ª±c tr·ªçng y·∫øu.'
                ],
                forces: 'L·ª•c qu√¢n, H·∫£i qu√¢n, Ph√≤ng kh√¥ng - Kh√¥ng qu√¢n, B·ªô ƒë·ªôi Bi√™n ph√≤ng, ƒê·∫∑c c√¥ng.'
            },
            { 
                id: 'kinh-te', 
                name: '2. Tham gia X√¢y d·ª±ng Kinh t·∫ø & Qu·ªëc ph√≤ng', 
                icon: 'üèóÔ∏è', 
                summary: 'T√≠ch c·ª±c tham gia ph√°t tri·ªÉn kinh t·∫ø-x√£ h·ªôi, c·ªßng c·ªë qu·ªëc ph√≤ng to√†n d√¢n t·∫°i c√°c v√πng s√¢u, v√πng xa, bi√™n gi·ªõi, h·∫£i ƒë·∫£o.', 
                missions: [
                    'X√¢y d·ª±ng c√°c c√¥ng tr√¨nh qu·ªëc ph√≤ng k·∫øt h·ª£p kinh t·∫ø (ƒë∆∞·ªùng, c·∫£ng, s√¢n bay).',
'Th·ª±c hi·ªán nhi·ªám v·ª• khai hoang, l√†m th·ªßy l·ª£i, tham gia s·∫£n xu·∫•t n√¥ng nghi·ªáp t·∫°i v√πng kh√≥ khƒÉn.',
                    'ƒê√†o t·∫°o ngh·ªÅ v√† chuy·ªÉn giao c√¥ng ngh·ªá cho b·ªô ƒë·ªôi xu·∫•t ng≈©.'
                ],
                forces: 'C√°c ƒêo√†n Kinh t·∫ø Qu·ªëc ph√≤ng, C√¥ng binh, Qu√¢n y, c√°c Binh ƒëo√†n ch·ªß l·ª±c.'
            },
            { 
                id: 'dan-van', 
                name: '3. C√¥ng t√°c D√¢n v·∫≠n, C·ª©u h·ªô & H·ªó tr·ª£ Nh√¢n d√¢n', 
                icon: 'üÜò', 
                summary: 'G·∫Øn b√≥ m√°u th·ªãt v·ªõi nh√¢n d√¢n, l√† l·ª±c l∆∞·ª£ng ƒëi ƒë·∫ßu trong kh·∫Øc ph·ª•c h·∫≠u qu·∫£ thi√™n tai, d·ªãch b·ªánh.', 
                missions: [
                    'Gi√∫p d√¢n x√≥a ƒë√≥i gi·∫£m ngh√®o, x√¢y d·ª±ng n√¥ng th√¥n m·ªõi, kh√°m ch·ªØa b·ªánh mi·ªÖn ph√≠.',
                    'Tham gia ph√≤ng ch·ªëng, c·ª©u h·ªô c·ª©u n·∫°n thi√™n tai (l≈© l·ª•t, ch√°y r·ª´ng, s·∫°t l·ªü).',
                    'Th·ª±c hi·ªán c√¥ng t√°c ngo·∫°i giao qu·ªëc ph√≤ng, gi·ªØ g√¨n h√≤a b√¨nh th·∫ø gi·ªõi.'
                ],
                forces: 'T·∫•t c·∫£ c√°c Qu√¢n khu, Qu√¢n ƒëo√†n, l·ª±c l∆∞·ª£ng C√¥ng binh v√† Qu√¢n y.'
            }
        ];

        const tabsContainer = document.getElementById('tabs-container');
        const contentContainer = document.getElementById('content-container');

        function createContentCard(role, isActive) {
            const card = document.createElement('div');
            card.id = role.id;
            card.className = `main-card p-6 md:p-10 rounded-2xl border-t-4 border-red-600 bg-white ${role.id === 'chien-dau' ? '' : 'hidden'}`;

            card.innerHTML = `
                <div class="flex items-start mb-6">
                    <span class="text-5xl mr-4">${role.icon}</span>
                    <div>
                        <h3 class="text-3xl font-bold text-red-700">${role.name}</h3>
                        <p class="text-gray-600 mt-1">${role.summary}</p>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="md:col-span-2">
                        <h4 class="text-xl font-semibold mb-3 border-b pb-1 text-red-600">Nhi·ªám v·ª• Chi ti·∫øt:</h4>
                        <ul class="list-disc pl-5 space-y-2 text-gray-700 text-base">
                            ${role.missions.map(m => `<li>${m}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="md:col-span-1 bg-gray-50 p-4 rounded-xl border border-gray-200">
                        <h4 class="text-xl font-semibold mb-3 border-b pb-1 text-red-600">L·ª±c l∆∞·ª£ng Ti√™u bi·ªÉu:</h4>
                        <p class="text-gray-700 text-sm italic">${role.forces}</p>
                    </div>
                </div>
            `;
            contentContainer.appendChild(card);
        }
function createTabButton(role, isActive) {
            const button = document.createElement('button');
            button.dataset.target = role.id;
            button.className = `tab-btn py-4 px-3 md:px-6 rounded-xl font-semibold text-center border-b-4 border-red-700 bg-red-100 text-red-800 hover:bg-red-200 transition duration-300`;
            if (isActive) {
                button.classList.add('active');
            }
            button.innerHTML = `
                <span class="text-3xl block mb-1">${role.icon}</span>
                <span class="text-sm md:text-base">${role.name}</span>
            `;
            tabsContainer.appendChild(button);
        }

        function setupInteractions() {
            rolesData.forEach((role, index) => {
                const isActive = index === 0;
                createTabButton(role, isActive);
                createContentCard(role, isActive);
            });

            const tabButtons = document.querySelectorAll('.tab-btn');
            const contentPanels = document.querySelectorAll('.main-card');

            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const targetId = button.dataset.target;

                    tabButtons.forEach(btn => btn.classList.remove('active'));
                    button.classList.add('active');

                    contentPanels.forEach(panel => {
                        if (panel.id === targetId) {
                            panel.classList.remove('hidden');
                        } else {
                            panel.classList.add('hidden');
                        }
                    }
